# Install dependencies with Pip.
puts-cmd "pip install -r requirements.txt"

if [ -f $CACHE_DIR/egg-path-prefix ]; then
  prefix=$(cat $CACHE_DIR/egg-path-prefix)

  set +e
  # delete any existing egg links, to uninstall existing installations.
  find $DEPS_DIR/$DEPS_IDX/python/lib/python*/site-packages/ -name "*.egg-link" -delete 2> /dev/null
  find $DEPS_DIR/$DEPS_IDX/python/lib/python*/site-packages/ -name "*.pth" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#$prefix#$DEPS_DIR/$DEPS_IDX#" &> /dev/null

  # Support for the above, for PyPy.
  find $DEPS_DIR/$DEPS_IDX/python/lib-python/*/site-packages/ -name "*.egg-link" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#$prefix#$DEPS_DIR/$DEPS_IDX#" &> /dev/null
  find $DEPS_DIR/$DEPS_IDX/python/lib-python/*/site-packages/ -name "*.pth" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#$prefix#$DEPS_DIR/$DEPS_IDX#" &> /dev/null
  set -e
fi

if test -d $BUILD_DIR/vendor; then
  pip install -r requirements.txt --exists-action=w --src=$DEPS_DIR/$DEPS_IDX/src --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent
  cp requirements.txt $DEPS_DIR/$DEPS_IDX/python/requirements-declared.txt
  pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > $DEPS_DIR/$DEPS_IDX/python/requirements-installed.txt
else
  pip install -r requirements.txt --exists-action=w --src=$DEPS_DIR/$DEPS_IDX/src | cleanup | indent

  cp requirements.txt $DEPS_DIR/$DEPS_IDX/python/requirements-declared.txt
  pip freeze > $DEPS_DIR/$DEPS_IDX/python/requirements-installed.txt
fi

pushd $DEPS_DIR/$DEPS_IDX/bin >/dev/null
  ln -sf ../python/bin/* .
popd >/dev/null

# Record for future reference.
echo $DEPS_DIR/$DEPS_IDX > "$CACHE_DIR/egg-path-prefix"

echo
